System.register(["jotai-urql","jotai"],function(h){"use strict";var m,c,f,y,l;return{setters:[function(o){m=o.atomsWithQuery,c=o.clientAtom,f=o.atomsWithMutation,y=o.atomsWithSubscription,h("clientAtom",o.clientAtom)},function(o){l=o.atom}],execute:function(){h({atomWithMutation:W,atomWithQuery:o,atomWithSubscription:p});function o(a,u=e=>e(c)){console.warn("[DEPRECATED] use `jotai-urql` instead.");const e=r=>{const t=a(r);return[t.query,t.variables,{...t.requestPolicy&&{requestPolicy:t.requestPolicy},...t.context}]},[i,s]=m(e,u);return l(r=>{if(a(r).pause)return null;const t=r(s);if(t.error)throw t.error;return"data"in t||r(i),t},(r,t,n)=>{switch(n.type==="reexecute"&&(console.warn("DEPRECATED [atomWithQuery] use refetch instead of reexecute"),n.type="refetch"),"opts"in n&&console.warn("DEPRECATED [atomWithQuery] action.opts is no longer used"),n.type){case"refetch":return t(s,n)}})}function W(a,u=e=>e(c)){console.warn("[DEPRECATED] use `jotai-urql` instead.");const[,e]=f(u);return l(i=>i(e),async(i,s,r)=>{const t=[a(i),r.variables,r.context||{}];return await s(e,t),Promise.resolve(i(e,{unstable_promise:!0})).then(n=>{var E;if((E=r.callback)==null||E.call(r,n),n.error)throw n.error})})}function p(a,u=e=>e(c)){console.warn("[DEPRECATED] use `jotai-urql` instead.");const e=r=>{const t=a(r);return[t.query,t.variables,t.context||{}]},[i,s]=y(e,u);return l(r=>{if(a(r).pause)return null;const t=r(s);if(t.error)throw t.error;return"data"in t||r(i),t},(r,t,n)=>{switch(n.type){case"refetch":return t(s,n)}})}}}});
