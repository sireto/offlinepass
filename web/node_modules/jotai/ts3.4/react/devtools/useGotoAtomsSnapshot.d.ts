import { useStore } from 'jotai/react';
import { Atom } from 'jotai/vanilla';
type Options = Parameters<typeof useStore>[0];
type AnyAtomValue = unknown;
type AnyAtom = Atom<AnyAtomValue>;
type AtomsValues = Map<AnyAtom, AnyAtomValue>;
type AtomsDependents = Map<AnyAtom, Set<AnyAtom>>;
type AtomsSnapshot = Readonly<{
    values: AtomsValues;
    dependents: AtomsDependents;
}>;
export declare function useGotoAtomsSnapshot(options?: Options): (snapshot: AtomsSnapshot) => void;
export {};
declare type Awaited<T> = T extends Promise<infer V> ? V : T;